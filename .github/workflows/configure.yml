name: Configure
on: [push, pull_request]
jobs:
  configure:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Ubuntu GCC ARM SF
            os: ubuntu-latest
            compiler: arm-linux-gnueabi-gcc
            configure-args: --warn
            chost: arm-linux-gnueabi
            packages: qemu qemu-user gcc-arm-linux-gnueabi libc-dev-armel-cross

          - name: Ubuntu Emscripten WASM32
            os: ubuntu-latest
            chost: wasm32
            configure-args: --warn --zlib-compat --static
            configure-prefix: emconfigure
            cflags: -static
            ldflags: -static
            emu-run: node

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install packages (Ubuntu)
      if: runner.os == 'Linux' && matrix.packages
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.packages }}

    - name: Install Emscripten
      if: contains(matrix.name, 'WASM32')
      uses: mymindstorm/setup-emsdk@v11

    - name: Generate project files
      run: |
        mkdir ${{ matrix.build-dir || '.not-used' }}
        cd ${{ matrix.build-dir || '.' }}
        ${{ matrix.configure-prefix }} ${{ matrix.build-src-dir || '.' }}/configure ${{ matrix.configure-args }}
      env:
        CC: ${{ matrix.compiler }}
        CFLAGS: ${{ matrix.cflags }}
        LDFLAGS: ${{ matrix.ldflags }}
        CHOST: ${{ matrix.chost }}
        EMU_RUN: ${{ matrix.emu-run }}
        CI: true

    - name: Compile source code
      run: make -j2
      working-directory: ${{ matrix.build-dir }}

    - name: Run test cases
      run: make test
      working-directory: ${{ matrix.build-dir }}

    - name: Upload build errors
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: ${{ matrix.name }} (configure)
        path: |
          **/Makefile
          ${{ matrix.build-dir || '.' }}/configure.log
        retention-days: 30
