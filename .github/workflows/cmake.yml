name: CI CMake
on: [push, pull_request]
jobs:
  ci-cmake:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [
          Windows GCC
        ]
        include:
          - name: Windows GCC
            os: windows-latest
            compiler: gcc
            cmake-args: -G Ninja
            codecov: win64_gcc


    steps:
    - name: Checkout repository
      uses: actions/checkout@v1

    - name: Install packages (Ubuntu)
      if: runner.os == 'Linux' && matrix.packages
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.packages }}

    - name: Set environment variables (Windows)
      run:  echo "::set-env name=localAppData::$($env:LOCALAPPDATA)"

    - name: Cache packages (Windows)
      uses: actions/cache@v2
      if: runner.os == 'Windows'
      with:
        key: zlib-ng-win-chocolatey-${{matrix.compiler}}
        path: |
          ${{env.localAppData}}\Local\Temp\chocolatey\

    - name: Install packages (Windows) test
      if: runner.os == 'Windows'
      run: |
        choco install ninja ${{ matrix.packages }} --no-progress

    - name: Install packages (Windows/GCC)
      if: runner.os == 'Windows' && matrix.codecov && matrix.compiler == 'gcc'
      # Use gcov-7 via mingw on windows because gcov-8 throws tons of warnings
      # https://partner-bugzilla.redhat.com/show_bug.cgi?id=1577508
      run: |
        choco install mingw --version=7.3.0 --force --allow-downgrade --no-progress

    - name: Install packages (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install ninja ${{ matrix.packages }}

    - name: Install codecov.io tools
      if: matrix.codecov
      # Need to use special fork of codecov-python for Windows
      # https://github.com/codecov/codecov-python/pull/169
      run: |
        python -u -m pip -v install git+https://github.com/nmoinvaz/codecov-python.git@master

    - name: Generate project files
      # Shared libaries turned off for qemu ppc* and sparc & reduce code coverage sources
      # Gzip file operations turned on to reduce code coverage sources across multiple tests
      run: |
        mkdir ${{ matrix.build-dir || '.not-used' }}
        cd ${{ matrix.build-dir || '.' }}
        cmake ${{ matrix.build-src-dir || '.' }} ${{ matrix.cmake-args }} -DCMAKE_BUILD_TYPE=${{ matrix.build-config || 'Release' }} -DBUILD_SHARED_LIBS=OFF -DWITH_GZFILEOP=ON -DWITH_FUZZERS=ON -DWITH_CODE_COVERAGE=ON -DWITH_MAINTAINER_WARNINGS=ON
      env:
        CC: ${{ matrix.compiler }}
        CFLAGS: ${{ matrix.cflags }}
        LDFLAGS: ${{ matrix.ldflags }}
        CI: true

    - name: Compile source code
      run: |
        cd ${{ matrix.build-dir || '.' }}
        cmake --build . --config ${{ matrix.build-config || 'Release' }}

    - name: Run test cases
      run: |
        cd ${{ matrix.build-dir || '.' }}
        ctest -C Release --output-on-failure --max-width 120
      env:
        ASAN_OPTIONS: ${{ matrix.asan-options || 'verbosity=1' }}
        MSAN_OPTIONS: ${{ matrix.msan-options || 'verbosity=1' }}
        TSAN_OPTIONS: ${{ matrix.tsan-options || 'verbosity=1' }}
        LSAN_OPTIONS: ${{ matrix.lsan-options || 'verbosity=1' }}

    - name: Upload coverage report
      if: matrix.codecov && ( env.CODECOV_TOKEN_SECRET != '' || github.repository == 'zlib-ng/zlib-ng' )
      shell: bash
      run: |
        bash tools/codecov-upload.sh
      env:
        # Codecov does not yet support GitHub Actions
        CODECOV_TOKEN_SECRET: "${{secrets.CODECOV_TOKEN}}"
        CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN || 'e4fdf847-f541-4ab1-9d50-3d27e5913906' }}"
        CODECOV_FLAGS: "${{ matrix.codecov }}"
        CODECOV_NAME:  "${{ matrix.name }}"
        CODECOV_EXEC:  "${{ matrix.gcov-exec || 'gcov' }}"
        CODECOV_DIR:   "${{ matrix.build-dir || '.' }}"
